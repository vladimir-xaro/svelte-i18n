import{derived as b,readonly as d,writable as y}from"svelte/store";import c from"isobject";import T from"deepmerge";const f=(()=>{const{set:t,subscribe:n}=y(null);let i=null;n(r=>{i=r});const o=r=>{if(r!==i){if(r===null){t(null);return}if(!(r in a))throw new Error(`[@xaro/svelte-i18n] No translations for locale: "${r}"`);t(r)}};return{set:o,update:r=>o(r(i)),subscribe:n,setNullIf:r=>{i!==null&&r===i&&o(r)}}})(),w=y(new Set),E=d(w),a={};window.allTranslations=a;const L=(t={},n=null)=>{if(!c(t))throw new Error("[@xaro/svelte-i18n] Translations must be an object");if(Object.assign(a,t),w.update(i=>{for(const o in t)i.add(o);return i}),n&&!(n in a))throw new Error(`[@xaro/svelte-i18n] No translations for locale: ${n}`);f.set(n)},N=t=>t in a,_=t=>t in a?(delete a[t],f.setNullIf(t),!0):!1,x=(t,n,i,o=!1)=>{t in a||(a[t]={},w.update(r=>r.add(t)));let l=Array.isArray(n)?n:n.split(/\.+/);if(!l.length){if(!c(i))throw new Error("[@xaro/svelte-i18n] Translation cannot be a string when no path is given");a[t]=i;return}let s=a[t];for(let r=0;r<l.length;r++){const e=l[r];if(e)r===l.length-1?s[e]=i:(e in s||(s[e]={}),s=s[e]);else throw new Error("[@xaro/svelte-i18n] Path cannot be empty, end or begin with a separator character")}o&&f.set(t)},R=(t,n,i,o=!1)=>{if(!(t in a)){x(t,n,i);return}let l=Array.isArray(n)?n:n.split(/\.+/);if(!l.length){if(!c(i))throw new Error("[@xaro/svelte-i18n] Translation cannot be a string when no path is given");a[t]=i;return}let s=a[t];for(let r=0;r<l.length;r++){const e=l[r];if(e)r===l.length-1?e in s&&c(s[e])&&c(i)?s[e]=T(s[e],i):s[e]=i:(e in s||(s[e]={}),s=s[e]);else throw new Error("[@xaro/svelte-i18n] Path cannot be empty, end or begin with a separator character")}o&&f.set(t)},S=(t,n,i=!1)=>{if(!(t in a))throw new Error(`[@xaro/svelte-i18n] No translations for locale: ${t}`);let o=a[t],l=Array.isArray(n)?n:n.split(/\.+/);for(let s=0;s<l.length;s++){const r=l[s];if(r)s===l.length-1?delete o[r]:(r in o||(o[r]={}),o=o[r]);else throw new Error("[@xaro/svelte-i18n] Path cannot be empty, end or begin with a separator character")}i&&f.set(t)},p=(t,n,i,o)=>{if(t===null||!(t in a))return o||(Array.isArray(n)?n.join(","):n);let l=a[t];const s=r=>{if(typeof l[r]=="string"){let e=l[r];if(c(i)){const g=Object.keys(i);if(g.length)for(const u of g)e=e.replaceAll(`{{${u}}}`,i[u])}return e}return l=l[r],null};if(Array.isArray(n))r:for(const r of n)if(r in l){const e=s(r);if(e!==null)return e}else{const e=r.split(".");for(e.splice(-1);e.length;)if(e.join(".")in l){const u=s(r);if(u!==null)return u;continue r}else e.splice(-1);return o||(Array.isArray(n)?n.join(","):n)}else{const r=n.split(".");for(const e of r)if(e in l){const g=s(e);if(g!==null)return g}else return o||n}return o||(Array.isArray(n)?n.join(","):n)},k=b(f,t=>(n,i={},o)=>p(t,n,i,o));export{R as addTranslation,E as allLocales,N as hasLocale,L as init,f as locale,_ as removeLocale,S as removeTranslation,x as setTranslation,k as t};
//# sourceMappingURL=svelte-i18n.mjs.map
